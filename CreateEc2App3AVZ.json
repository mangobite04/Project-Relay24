{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "AWS CloudFormation : Create an Amazon EC2 instance. This CFT will creates an 3 EC2 in different AVZ and security group for the instance to give you SSH access.",
  "Mappings" : {
      "RegionMap" : {
          "us-east-1" : { "AMI" : "ami-31616a57" },
          "us-west-1" : { "AMI" : "ami-655a0a20" },
          "eu-west-1" : { "AMI" : "ami-d834aba1" },
          "ap-northeast-1" : { "AMI" : "ami-8e08a38f" },
          "ap-southeast-1" : { "AMI" : "ami-72621c20" }
      }
  },
  "Parameters" : {
    "KeyName": {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instance",
      "Type": "AWS::EC2::KeyPair::KeyName",
      "Default" : "",
      "ConstraintDescription" : "must be the name of an existing EC2 KeyPair."
    },

    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "t2.micro",
      "AllowedValues" : ["t2.micro", "t2.small", "t2.medium"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },

    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "87.213.122.168/32",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
   }
  },

  "Resources" : {
    "App1ServerInstance" : {
      "Type" : "AWS::EC2::Instance",

      "Metadata" : {
          "Comment1" : "Configure the bootstrap helpers to install the Apache App 1 Server and PHP",
          "Comment2" : "Save website content to /var/www/html/index.php",

          "AWS::CloudFormation::Init" : {
              "configSets" : {
                  "Install" : [ "Install" ]
              },
              "Install" : {
                  "packages" : {
                      "yum" : {
                          "httpd"        	: [],
						  "curl"		 	: [],
						  "php"		 		: [],
                          "php-mysql"    	: []
                      }
                  },
                  "files" : {
                      "/var/www/html/index.php" : {
                          "content" : { "Fn::Join" : [ "", [

                              "<html>\n",
                              "  <body>\n",
							  "    <h1>\n",
                              "    <?php\n",
                              "      // Setup a handle for CURL\n",
                              "      $curl_handle=curl_init();\n",
                              "      curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);\n",
                              "      curl_setopt($curl_handle,CURLOPT_RETURNTRANSFER,1);\n",
			  
							  "      // Get the EC2_AVAIL_ZONE of the intance from the instance metadata\n",
							  "      curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/placement/availability-zone');\n",
                              "      $ec2_avail_zone = curl_exec($curl_handle);\n",
                              "      if (empty($ec2_avail_zone))\n",
                              "      {\n",
                              "        print \"Note: Sorry, for some reason, we got no ec2_avail_zone back <br />\";\n",
                              "      }\n",
                              "      else\n",
                              "      {\n",
                              "        print \"EC2_AVAIL_ZONE = \" . $ec2_avail_zone . \"<br />\";\n",
                              "      }\n",
                              
                              "    ?>\n",
							  "    <h1>\n",
                              "  </body>\n",
                              "</html>\n"

                          ]]},
                          "mode"  : "000600",
                          "owner" : "apache",
                          "group" : "apache"
                      }
                  },
                  "services" : {
                      "sysvinit" : {  
                          "httpd"   : { "enabled" : "true", "ensureRunning" : "true" }
                      }
                  }
              }
          }
      },
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref" : "App1ServerSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
		"AvailabilityZone" : "eu-west-1a",
		"Tags"	: [ { "Key" : "Name", "Value" : "APP_1_EC2_AVAIL_ZONE" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "yum install -y aws-cfn-bootstrap\n",
          "# Install the files and packages from the metadata\n",
          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource App1ServerInstance ",
          "         --configsets Install ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",
		  "/sbin/service httpd start","\n",
		  "/sbin/chkconfig --add httpd","\n",
		  "/sbin/chkconfig httpd on","\n"		  
        ]]}}

      }
    },

    "App2ServerInstance" : {
      "Type" : "AWS::EC2::Instance",

      "Metadata" : {
          "Comment1" : "Configure the bootstrap helpers to install the Apache App 2 Server and PHP",
          "Comment2" : "Save website content to /var/www/html/index.php",

          "AWS::CloudFormation::Init" : {
              "configSets" : {
                  "Install" : [ "Install" ]
              },
              "Install" : {
                  "packages" : {
                      "yum" : {
                          "httpd"        	: [],
						  "curl"		 	: [],
						  "php"		 		: [],
                          "php-mysql"    	: []
                      }
                  },
                  "files" : {
                      "/var/www/html/index.php" : {
                          "content" : { "Fn::Join" : [ "", [

                              "<html>\n",
                              "  <body>\n",
							  "    <h1>\n",
                              "    <?php\n",
                              "      // Setup a handle for CURL\n",
                              "      $curl_handle=curl_init();\n",
                              "      curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);\n",
                              "      curl_setopt($curl_handle,CURLOPT_RETURNTRANSFER,1);\n",
			  
							  "      // Get the EC2_AVAIL_ZONE of the intance from the instance metadata\n",
							  "      curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/placement/availability-zone');\n",
                              "      $ec2_avail_zone = curl_exec($curl_handle);\n",
                              "      if (empty($ec2_avail_zone))\n",
                              "      {\n",
                              "        print \"Note: Sorry, for some reason, we got no ec2_avail_zone back <br />\";\n",
                              "      }\n",
                              "      else\n",
                              "      {\n",
                              "        print \"EC2_AVAIL_ZONE = \" . $ec2_avail_zone . \"<br />\";\n",
                              "      }\n",
                              
                              "    ?>\n",
							  "    <h1>\n",
                              "  </body>\n",
                              "</html>\n"

                          ]]},
                          "mode"  : "000600",
                          "owner" : "apache",
                          "group" : "apache"
                      }
                  },
                  "services" : {
                      "sysvinit" : {  
                          "httpd"   : { "enabled" : "true", "ensureRunning" : "true" }
                      }
                  }
              }
          }
      },
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref" : "App2ServerSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
		"AvailabilityZone" : "eu-west-1b",
		"Tags"	: [ { "Key" : "Name", "Value" : "APP_2_EC2_AVAIL_ZONE" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "yum install -y aws-cfn-bootstrap\n",
          "# Install the files and packages from the metadata\n",
          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource App2ServerInstance ",
          "         --configsets Install ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",
		  "/sbin/service httpd start","\n",
		  "/sbin/chkconfig --add httpd","\n",
		  "/sbin/chkconfig httpd on","\n"		  
        ]]}}

      }
    },	


    "App3ServerInstance" : {
      "Type" : "AWS::EC2::Instance",

      "Metadata" : {
          "Comment1" : "Configure the bootstrap helpers to install the Apache App 3 Server and PHP",
          "Comment2" : "Save website content to /var/www/html/index.php",

          "AWS::CloudFormation::Init" : {
              "configSets" : {
                  "Install" : [ "Install" ]
              },
              "Install" : {
                  "packages" : {
                      "yum" : {
                          "httpd"        	: [],
						  "curl"		 	: [],
						  "php"		 		: [],
                          "php-mysql"    	: []
                      }
                  },
                  "files" : {
                      "/var/www/html/index.php" : {
                          "content" : { "Fn::Join" : [ "", [

                              "<html>\n",
                              "  <body>\n",
							  "    <h1>\n",
                              "    <?php\n",
                              "      // Setup a handle for CURL\n",
                              "      $curl_handle=curl_init();\n",
                              "      curl_setopt($curl_handle,CURLOPT_CONNECTTIMEOUT,2);\n",
                              "      curl_setopt($curl_handle,CURLOPT_RETURNTRANSFER,1);\n",
			  
							  "      // Get the EC2_AVAIL_ZONE of the intance from the instance metadata\n",
							  "      curl_setopt($curl_handle,CURLOPT_URL,'http://169.254.169.254/latest/meta-data/placement/availability-zone');\n",
                              "      $ec2_avail_zone = curl_exec($curl_handle);\n",
                              "      if (empty($ec2_avail_zone))\n",
                              "      {\n",
                              "        print \"Note: Sorry, for some reason, we got no ec2_avail_zone back <br />\";\n",
                              "      }\n",
                              "      else\n",
                              "      {\n",
                              "        print \"EC2_AVAIL_ZONE = \" . $ec2_avail_zone . \"<br />\";\n",
                              "      }\n",
                              
                              "    ?>\n",
							  "    <h1>\n",
                              "  </body>\n",
                              "</html>\n"

                          ]]},
                          "mode"  : "000600",
                          "owner" : "apache",
                          "group" : "apache"
                      }
                  },
                  "services" : {
                      "sysvinit" : {  
                          "httpd"   : { "enabled" : "true", "ensureRunning" : "true" }
                      }
                  }
              }
          }
      },
      "Properties" : {
        "InstanceType" : { "Ref" : "InstanceType" },
        "SecurityGroups" : [ { "Ref" : "App3ServerSecurityGroup" } ],
        "KeyName" : { "Ref" : "KeyName" },
		"AvailabilityZone" : "eu-west-1c",
        "ImageId" : { "Fn::FindInMap" : [ "RegionMap", { "Ref" : "AWS::Region" }, "AMI" ]},
		"Tags"	: [ { "Key" : "Name", "Value" : "APP_3_EC2_AVAIL_ZONE" } ],
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -xe\n",
          "yum install -y aws-cfn-bootstrap\n",
          "# Install the files and packages from the metadata\n",
          "/opt/aws/bin/cfn-init -v ",
          "         --stack ", { "Ref" : "AWS::StackName" },
          "         --resource App3ServerInstance ",
          "         --configsets Install ",
          "         --region ", { "Ref" : "AWS::Region" }, "\n",
		  "/sbin/service httpd start","\n",
		  "/sbin/chkconfig --add httpd","\n",
		  "/sbin/chkconfig httpd on","\n"		  
        ]]}}

      }
    },

    "App1ServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH & HTTP",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "87.213.122.168/32"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    },

    "App2ServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH & HTTP",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "87.213.122.168/32"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    },
	
    "App3ServerSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable SSH & HTTP",
        "SecurityGroupIngress" : [
          {"IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "80", "CidrIp" : "87.213.122.168/32"},
          {"IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"}}
        ]
      }
    }
	
  }

}
